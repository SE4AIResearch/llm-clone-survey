@article{10.1145/99977.99999,
author = {Eerkes, Gary L.},
title = {Profiling computer science master's programs},
year = {1991},
issue_date = {Jan. 1991},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {34},
number = {1},
issn = {0001-0782},
url = {https://doi.org/10.1145/99977.99999},
doi = {10.1145/99977.99999},
abstract = {Master's level computer science programs have experienced significant and sustained growth during the past two decades. According to the U.S. Department of Education's National Center for Education Statistics [4], a total of 1,588 master's degrees were conferred in computer and information sciences in 1971. This figure increased 508% to 8,070 in 1986—a larger percentage increase than any other major discipline. The 1970s and 1980s have also been an era in which computer science has experienced major theoretical and technological advances. The period has been marked by severe faculty shortages which are only now beginning to ease. Complicating matters further, the discipline is so young that it is still in the process of defining its intellectual framework [3]. Considering all of these factors, it is not surprising that there is a considerable amount of diversity and flux among computer science master's programs. What is surprising, however, is that little data is available pertaining to this degree.},
journal = {Commun. ACM},
month = {jan},
pages = {100–109},
numpages = {10}
}

@inproceedings{10.1145/5600.5696,
author = {Baruch, Marjory},
title = {An experience is worth 1K words},
year = {1986},
isbn = {0897911784},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/5600.5696},
doi = {10.1145/5600.5696},
abstract = {An introductory computer science course is presented which uses new techniques appropriate for a liberal arts college. Students learn standard topics by means of a series of guided labs in which they are active participants. The students learn to question, analyse, and construct examples, thereby acquiring the means for further inquiry and understanding. Irrelevant stumbling blocks are minimized in the hope that the positive learning process will be something they continue on their own.},
booktitle = {Proceedings of the Seventeenth SIGCSE Technical Symposium on Computer Science Education},
pages = {238–245},
numpages = {8},
location = {Cincinnati, Ohio, USA},
series = {SIGCSE '86}
}

@inproceedings{10.1145/288195.288279,
author = {Masuda, Gou and Sakamoto, Norihiro and Ushijima, Kazuo},
title = {Applying design patterns to decision tree learning system},
year = {1998},
isbn = {1581131089},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/288195.288279},
doi = {10.1145/288195.288279},
abstract = {In this paper we describe an application of design patterns to the development of a decision tree learning system. A decision tree learning system constructs a classifier as a form of tree from a given data set. It is required to be as flexible as possible when used in real application domains. Design patterns help us construct reusable software components and construct flexible and extensible systems. The approach employed in this study is as follows. First we examine several decision tree learning systems and identify hot-spots in the systems at points we anticipate future demand for modification and extension of the system. Second we determine which design pattern to apply to each hot-spot. We evaluate the extensibility of the system experimentally. Our experience shows that using design patterns in object-oriented software design allows the easy construction of flexible systems.},
booktitle = {Proceedings of the 6th ACM SIGSOFT International Symposium on Foundations of Software Engineering},
pages = {111–120},
numpages = {10},
keywords = {decision tree learning, design pattern, object-oriented software development},
location = {Lake Buena Vista, Florida, USA},
series = {SIGSOFT '98/FSE-6}
}

@inproceedings{10.1145/31820.31792,
author = {Lukey, Trevor and Loose, Kenneth and Hill, David R.},
title = {Implementation of a debugging aid for logic errors in Pascal programs},
year = {1987},
isbn = {0897912179},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/31820.31792},
doi = {10.1145/31820.31792},
abstract = {This paper describes a debugging utility with some tutorial capabilities. It is designed to assist novice programmers in finding logic errors in syntactically correct programs. Flow and use analysis techniques are employed to aid in the recognition of some instances of incorrect code sequence, improper variable use and improper nesting of constructs. The utility is menu driven with built in facilities for displaying user source programs and debugging information in a multiple window format.},
booktitle = {Proceedings of the Eighteenth SIGCSE Technical Symposium on Computer Science Education},
pages = {386–390},
numpages = {5},
location = {St. Louis, Missouri, USA},
series = {SIGCSE '87}
}

@inproceedings{10.1145/331697.331752,
author = {Pargas, Roy P. and Ludwick, Jennifer and Spoon, Steven},
title = {Hybrid search algorithms},
year = {1997},
isbn = {0897918509},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/331697.331752},
doi = {10.1145/331697.331752},
booktitle = {Proceedings of the 1997 ACM Symposium on Applied Computing},
pages = {269–273},
numpages = {5},
keywords = {dynamical systems, optimization, parallel processing},
location = {San Jose, California, USA},
series = {SAC '97}
}

@inproceedings{10.1145/331697.332340,
author = {Banach, Richard and Papadopoulos, George A.},
title = {Implementing interaction nets in MONSTR},
year = {1997},
isbn = {0897918509},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/331697.332340},
doi = {10.1145/331697.332340},
booktitle = {Proceedings of the 1997 ACM Symposium on Applied Computing},
pages = {509–514},
numpages = {6},
keywords = {MONSTR, distributed systems, interaction nets, term graph rewriting systems},
location = {San Jose, California, USA},
series = {SAC '97}
}

@inbook{10.1145/234286.1057828,
author = {Kay, Alan C.},
title = {The early history of Smalltalk},
year = {1996},
isbn = {0201895021},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/234286.1057828},
abstract = {Most ideas come from previous ideas. The sixties, particularly in the ARPA community, gave rise to a host of notions about "human-computer symbiosis" through interactive time-shared computers, graphics screens, and pointing devices. Advanced computer languages were invented to simulate complex systems such as oil refineries and semi-intelligent behavior. The soon to follow paradigm shift of modern personal computing, overlapping window interfaces, and object-oriented design came from seeing the work of the sixties as something more than a "better old thing." That is, more than a better way: to do mainframe computing; for end-users to invoke functionality; to make data structures more abstract. Instead the promise of exponential growth in computing/$/volume demanded that the sixties be regarded as "almost a new thing" and to find out what the actual "new things" might be. For example, one would compute with a handheld "Dynabook" in a way that would not be possible on a shared main-frame; millions of potential users meant that the user interface would have to become a learning environment along the lines of Montessori and Bruner; and needs for large scope, reduction in complexity, and end-user literacy would require that data and control structures be done away with in favor of a more biological scheme of protected universal cells interacting only through messages that could mimic any desired behavior.Early Smalltalk was the first complete realization of these new points of view as parented by its many predecessors in hardware, language, and user interface design. It became the exemplar of the new computing, in part, because we were actually trying for a qualitative shift in belief structures---a new Kuhnian paradigm in the same spirit as the invention of the printing press---and thus took highly extreme positions that almost forced these new styles to be invented.},
booktitle = {History of Programming Languages---II},
pages = {511–598},
numpages = {88}
}

@article{10.1145/382270.382425,
author = {McClure, Polley Ann},
title = {Planning for academic departmental systems},
year = {1987},
issue_date = {Sept. 1987},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {3},
issn = {0736-6892},
url = {https://doi.org/10.1145/382270.382425},
doi = {10.1145/382270.382425},
abstract = {I want to describe the computing environment at our campus and how departmental computing fits in, the goals that we envisioned for the departmental planning process, and the process that we have developed over the last two years. I'll also describe the model that we are continuing to develop to assist in the estimation of cost and in the negotiation of funding for departmental systems and show you three brief examples of plans which our academic departments have developed. Finally, I want to share my observations about the strengths and weaknesses of this process.},
journal = {SIGUCCS Newsl.},
month = {sep},
pages = {19–28},
numpages = {10}
}

@inproceedings{10.1145/98457.98754,
author = {Torrellas, Joseph and Hennessy, John and Weil, Thierry},
title = {Analysis of critical architectural and programming parameters in a hierarchical},
year = {1990},
isbn = {0897913590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/98457.98754},
doi = {10.1145/98457.98754},
abstract = {Scalable shared-memory multiprocessors are the subject of much current research, but little is known about the performance behavior of these machines. This paper studies the performance effects of two machine characteristics and two program characteristics that seem to be major factors in determining the performance of a hierarchical shared-memory machine. We develop an analytical model of the traffic in a machine loosely based on Stanford's DASH multiprocessor and use program parameters extracted from multiprocessor traces to study its performance. It is shown that both locality in the data reference stream and the amount of data sharing in a program have an important impact on performance. Although less obvious, the bandwidth within each cluster in the hierarchy also has a significant performance effect. Optimizations that improve the intracluster cache coherence protocol or increase the bandwidth within a cluster can be quite effective.},
booktitle = {Proceedings of the 1990 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems},
pages = {163–172},
numpages = {10},
location = {Univ. of Colorado, Boulder, Colorado, USA},
series = {SIGMETRICS '90}
}

@article{10.1145/231188.231190,
author = {Gauthier, Michel},
title = {What's new for scanning with Ada-95?},
year = {1996},
issue_date = {July/Aug. 1996},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {XVI},
number = {4},
issn = {1094-3641},
url = {https://doi.org/10.1145/231188.231190},
doi = {10.1145/231188.231190},
abstract = {This paper illustrates how some new Ada-95 features improve the versatility of scanning techniques. It will recall the definition of a scan, how scanning can be implemented in Ada-83, and what problems are associated with scans, notably in passing them as (generic) parameters. After that, we will discuss accesses to subprograms and show that they cannot become a worthwhile solution, and finally show an unexpected solution with tagged types used as a factorisation of properties rather than as an implementation of inheritance mechanisms.From some low-level point of view, both generic and file-like scannings can look like theoretical fashions that have no interest. The real question beyond such scannings is whether we accept the application of these programming principles that have emerged from decades of programming professional practice, such as weak coupling, abstraction and encapsulation. We argue that it is essential to study in depth all the consequences of these programming principles before assessing their interest in real life. We conjecture that encapsulated scans could be of enough interest to be much more widely used in industrial projects.Aside from industrial usages, scanning is a valid illustration of both tagged types and genericity, and we provided some suggested exercises for lecturers who would emphasize factorization of type properties and nested genericity or package parameters.},
journal = {Ada Lett.},
month = {jul},
pages = {57–72},
numpages = {16}
}

@inproceedings{10.1145/1479064.1479124,
author = {Umpleby, Stuart},
title = {Structuring information for a computer-based communications medium},
year = {1972},
isbn = {9781450379106},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1479064.1479124},
doi = {10.1145/1479064.1479124},
abstract = {Several years ago Prof. Charles E. Osgood suggested that it might be possible to develop a program for a computer-based education system which would eventually allow the public, possibly at a world's fair, to "explore the future." Such an "exploration" would be useful both for education and for social science research. This paper is a progress report on the continuing development of that "exploration of alternative futures" using the PLATO system (see Figure 1).},
booktitle = {Proceedings of the November 16-18, 1971, Fall Joint Computer Conference},
pages = {337–350},
numpages = {14},
location = {Las Vegas, Nevada},
series = {AFIPS '71 (Fall)}
}

@inbook{10.1145/61975.66913,
author = {Bell, G.},
title = {Keynote address: toward a history of (personal) workstations},
year = {1988},
isbn = {0201112590},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/61975.66913},
booktitle = {A History of Personal Workstations},
pages = {1–50},
numpages = {50}
}

@article{10.1145/1095515.1095516,
author = {Minker, Jack},
title = {Information storage and retrieval: a survey and functional description},
year = {1977},
issue_date = {Fall 1977},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {12},
number = {2},
issn = {0163-5840},
url = {https://doi.org/10.1145/1095515.1095516},
doi = {10.1145/1095515.1095516},
abstract = {Information Storage and Retrieval (IS&amp;R) encompasses a broad scope of topics ranging from basic techniques for accessing data to sophisticated approaches for the analysis of natural language text and the deduction of information. Within the field, three general areas of investigation can be distinguished not only by their subject matter but also by the types of individuals presently interested in them:(1) Document retrieval,(2) Generalized data management, and(3) Question-answering.A functional description which applies to each of the three areas is presented together with a survey of work being conducted. The similarities and differences of the three areas of IS&amp;R are described. Typical systems which incorporate many of the functions and techniques are described in the appendix.},
journal = {SIGIR Forum},
month = {sep},
pages = {12–108},
numpages = {97},
keywords = {automatic indexing, data management, data structures, deductive search, information retrieval, natural language, problem solving, question-answering, relational data systems, theorem proving}
}

@article{10.1145/202949.202956,
author = {Moen, William E. and McClure, Charles R.},
title = {The government information locator service: a user-based approach to standards},
year = {1994},
issue_date = {June 1994},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {2},
number = {2},
issn = {1067-9936},
url = {https://doi.org/10.1145/202949.202956},
doi = {10.1145/202949.202956},
journal = {StandardView},
month = {jun},
pages = {86–95},
numpages = {10}
}

@inproceedings{10.1145/298151.298436,
author = {Qiao, Xiangzhen and Gan, Qitao and Liu, Zhiyong and Guo, Xiaotao and Li, Xiaobo},
title = {Cache optimization in scientific computations},
year = {1999},
isbn = {1581130864},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/298151.298436},
doi = {10.1145/298151.298436},
booktitle = {Proceedings of the 1999 ACM Symposium on Applied Computing},
pages = {548–552},
numpages = {5},
keywords = {FFT, Jacobi, QR, cache optimization, parallel processing},
location = {San Antonio, Texas, USA},
series = {SAC '99}
}

@article{10.1145/326460.326494,
author = {Kuzma, Bernadette and Carson, George S. and Puk, Richard F. and Gebhardt, John},
title = {BIIF, VRML and CGM},
year = {1999},
issue_date = {May 1999},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {33},
number = {2},
issn = {0097-8930},
url = {https://doi.org/10.1145/326460.326494},
doi = {10.1145/326460.326494},
abstract = {This edition of the Standards Pipeline consists of three articles that provide an in-depth look at applications of three important international standards. In the first article, Bernadette Kuzma of SEMCOR, Inc. describes the Basic Image Interchange Format (BIIF) formally known as ISO/IEC 12087-5:1998. While BIIF originated in the defense community, it is beginning to find wider applications in areas ranging from electronic libraries to medical imaging. In the second article, Richard F. Puk of Intelligraphics describes the current status and future prospects for the Virtual Reality Modeling Language (VRML) formally known as ISO/IEC 14772-1. In the final article, Lofton Henderson of Inso Corporation and John Gebhardt of InterCAP Graphics Systems, Inc. describe the work of the CGM Open Consortium and in particular the WebCGM profile.},
journal = {SIGGRAPH Comput. Graph.},
month = {may},
pages = {54–60},
numpages = {7}
}

@article{10.1109/90.893875,
author = {Ivanovich, Milosh and Zukerman, Moshe and Cameron, Fraser},
title = {A study of deadlock models for a multiservice medium access protocol employing a Slotted Aloha signalling channel},
year = {2000},
issue_date = {Dec. 2000},
publisher = {IEEE Press},
volume = {8},
number = {6},
issn = {1063-6692},
url = {https://doi.org/10.1109/90.893875},
doi = {10.1109/90.893875},
journal = {IEEE/ACM Trans. Netw.},
month = {dec},
pages = {800–811},
numpages = {12},
keywords = {p-persistence, HFC, MAC, contention resolution, deadlock, protocol}
}

@inproceedings{10.1145/800051.801846,
author = {Morrison, Forest E. and Page, June A. and Irby, Cynthia B.},
title = {Use of a software package for diverse user-developed applications},
year = {1981},
isbn = {0897910443},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800051.801846},
doi = {10.1145/800051.801846},
abstract = {In recent years the technological advances in computer hardware have raced far ahead of the development of software. Computer manufacturers, software firms, government and private industry have all been caught in the dilemma of having the latest in data processing equipment, but lacking the trained personnel to achieve the maximum benefit from this equipment. Low priced mini and micro-computer systems started and are continuing to fuel the rush to decentralization. We see less of the central computer facility and more of small computers being utilized in the offices and laboratories that they serve.In an attempt to compensate for the lack of computer knowledge in end users, computer manufacturers are developing generalized software packages and coupling these with powerful, low priced equipment so that the customer can immediately begin to derive benefits from computerization.},
booktitle = {Proceedings of the Eighteenth Annual Computer Personnel Research Conference},
pages = {14–38},
numpages = {25},
location = {Washington, D.C., USA},
series = {SIGCPR '81}
}

@inproceedings{10.5555/800124.804007,
author = {Krawczyk, Robert J. and Dudnik, Elliott E.},
title = {Space plan: A user oriented package for the evaluation and the generation of spatial inter-relationships},
year = {1973},
publisher = {IEEE Press},
abstract = {The development and the subsequent exposure of automated space planning methodologies has grown to the point where they are now acceptable and readily available preliminary architectural design tools.This paper describes a system of computer programs which were developed in an attempt to pull together current design methodologies.In summary, the paper describes the general system and discusses the basic assumptions and concepts implemented within it. Each method presented is described and executed with the same specific design problem for the purpose of demonstration and comparison.},
booktitle = {Proceedings of the 10th Design Automation Workshop},
pages = {121–138},
numpages = {18},
series = {DAC '73}
}

